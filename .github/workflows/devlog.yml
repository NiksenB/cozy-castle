name: Update Dev Log

on:
  pull_request:
    types: [closed]

jobs:
  update-devlog:
    if: github.event.pull_request.merged == true && github.base_ref == 'main'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Ensure full history for diffing

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Generate dev log entry
      env:
        PR_TITLE: ${{ github.event.pull_request.title }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
        PR_BODY: ${{ github.event.pull_request.body }}
      run: |
        python3 - <<EOF
        import os
        import re
        import datetime
        import subprocess

        pr_title = os.environ['PR_TITLE']
        pr_number = os.environ['PR_NUMBER']
        pr_body = os.environ['PR_BODY']
        today = datetime.date.today().isoformat()

        # Extract "What's changed" section
        match = re.search(r"## What's changed\s*(.*?)\s*##", pr_body + "\n##", re.DOTALL | re.IGNORECASE)
        changes = match.group(1).strip() if match else "No details provided."

        # Find added image files in the last 10 commits
        result = subprocess.run(["git", "diff", "--name-only", "HEAD~10", "HEAD"], capture_output=True, text=True)
        added_images = [line for line in result.stdout.splitlines() if line.startswith("dev-log/images/") and line.lower().endswith((".png", ".jpg", ".jpeg", ".gif"))]

        images_md = "\n".join(f"![{os.path.basename(img)}]({img})" for img in added_images) if added_images else "_No images added._"

        # Construct Markdown entry
        entry = f"""## PR #{pr_number} - {pr_title} ({today})

        ### What's changed
        {changes}

        ### Images
        {images_md}

        ---

        """

        # Prepend to dev-log/log.md
        log_path = "dev-log/log.md"
        with open(log_path, "r+", encoding="utf-8") as f:
            old = f.read()
            f.seek(0)
            f.write(entry + "\n" + old)
        EOF

    - name: Commit and push dev log
      env:
        PR_NUMBER: ${{ github.event.pull_request.number }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git add dev-log/log.md
        git commit -m "Update dev log for PR #$PR_NUMBER"
        git push
